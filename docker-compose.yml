version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lead-management-postgres
    environment:
      POSTGRES_DB: lead_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lead-management-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lead-management-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lead-management-network

  # Elasticsearch for search
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: lead-management-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - lead-management-network

  # Backend API (for development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: lead-management-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/lead_management
      REDIS_URL: redis://redis:6379
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - lead-management-network
    command: npm run dev

  # Frontend (for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: lead-management-frontend
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - lead-management-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  lead-management-network:
    driver: bridge